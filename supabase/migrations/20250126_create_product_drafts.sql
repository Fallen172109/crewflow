-- Create product drafts table for AI-generated products
CREATE TABLE IF NOT EXISTS product_drafts (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
    store_id UUID REFERENCES shopify_stores(id) ON DELETE CASCADE NOT NULL,
    
    -- Product details
    title TEXT NOT NULL,
    description TEXT,
    price DECIMAL(10,2),
    category TEXT,
    tags TEXT[],
    
    -- Product variants
    variants JSONB DEFAULT '[]'::jsonb,
    
    -- Images
    images TEXT[],
    
    -- Publishing status
    published BOOLEAN DEFAULT FALSE,
    shopify_product_id BIGINT,
    published_at TIMESTAMP WITH TIME ZONE,
    
    -- Metadata
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    
    -- AI generation metadata
    ai_generated BOOLEAN DEFAULT TRUE,
    generation_prompt TEXT,
    generation_model TEXT DEFAULT 'gpt-4-turbo-preview'
);

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_product_drafts_user_id ON product_drafts(user_id);
CREATE INDEX IF NOT EXISTS idx_product_drafts_store_id ON product_drafts(store_id);
CREATE INDEX IF NOT EXISTS idx_product_drafts_published ON product_drafts(published);
CREATE INDEX IF NOT EXISTS idx_product_drafts_created_at ON product_drafts(created_at);

-- Create activity log table for Shopify actions
CREATE TABLE IF NOT EXISTS shopify_activity_log (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
    store_id UUID REFERENCES shopify_stores(id) ON DELETE CASCADE NOT NULL,
    
    -- Action details
    action TEXT NOT NULL, -- 'product_created', 'product_updated', 'order_processed', etc.
    resource_type TEXT NOT NULL, -- 'product', 'order', 'customer', etc.
    resource_id TEXT, -- Shopify resource ID
    
    -- Additional details
    details JSONB DEFAULT '{}'::jsonb,
    
    -- Timestamps
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create indexes for activity log
CREATE INDEX IF NOT EXISTS idx_shopify_activity_log_user_id ON shopify_activity_log(user_id);
CREATE INDEX IF NOT EXISTS idx_shopify_activity_log_store_id ON shopify_activity_log(store_id);
CREATE INDEX IF NOT EXISTS idx_shopify_activity_log_action ON shopify_activity_log(action);
CREATE INDEX IF NOT EXISTS idx_shopify_activity_log_created_at ON shopify_activity_log(created_at);

-- Add RLS policies
ALTER TABLE product_drafts ENABLE ROW LEVEL SECURITY;
ALTER TABLE shopify_activity_log ENABLE ROW LEVEL SECURITY;

-- Product drafts policies
CREATE POLICY "Users can view their own product drafts" ON product_drafts
    FOR SELECT USING (auth.uid() = user_id);

CREATE POLICY "Users can create their own product drafts" ON product_drafts
    FOR INSERT WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Users can update their own product drafts" ON product_drafts
    FOR UPDATE USING (auth.uid() = user_id);

CREATE POLICY "Users can delete their own product drafts" ON product_drafts
    FOR DELETE USING (auth.uid() = user_id);

-- Activity log policies
CREATE POLICY "Users can view their own activity log" ON shopify_activity_log
    FOR SELECT USING (auth.uid() = user_id);

CREATE POLICY "Users can create their own activity log entries" ON shopify_activity_log
    FOR INSERT WITH CHECK (auth.uid() = user_id);

-- Create function to update updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Create trigger for product_drafts
CREATE TRIGGER update_product_drafts_updated_at 
    BEFORE UPDATE ON product_drafts 
    FOR EACH ROW 
    EXECUTE FUNCTION update_updated_at_column();

-- Add comments for documentation
COMMENT ON TABLE product_drafts IS 'Stores AI-generated product drafts before publishing to Shopify';
COMMENT ON TABLE shopify_activity_log IS 'Logs all Shopify-related actions performed through CrewFlow';

COMMENT ON COLUMN product_drafts.variants IS 'JSON array of product variants with title, price, and inventory';
COMMENT ON COLUMN product_drafts.images IS 'Array of image URLs for the product';
COMMENT ON COLUMN product_drafts.tags IS 'Array of product tags for categorization';
COMMENT ON COLUMN product_drafts.ai_generated IS 'Whether this product was generated by AI';
COMMENT ON COLUMN product_drafts.generation_prompt IS 'The original prompt used to generate this product';

COMMENT ON COLUMN shopify_activity_log.details IS 'Additional JSON details about the action performed';
COMMENT ON COLUMN shopify_activity_log.resource_id IS 'The Shopify resource ID (product ID, order ID, etc.)';
